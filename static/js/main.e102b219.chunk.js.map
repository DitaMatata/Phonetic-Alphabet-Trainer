{"version":3,"sources":["assets/carbon.png","helpers/alphabet.js","redux/reducers/index.js","redux/constants.js","redux/store.js","redux/actions.js","components/header.js","components/letterReference.js","components/wordInput.js","components/counter.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","alphabet","letter","code","initialState","trainerMode","correct","total","showWord","inputWasCorrect","currentLetter","userCodeInput","alphabetLoopHandler","s","Math","floor","random","rootReducer","state","arguments","length","undefined","action","type","console","log","Object","objectSpread","payload","toLowerCase","store","createStore","applyMiddleware","thunk","submitUserCodeInput","changeLetterProgressionMode","number","connect","props","react_default","a","createElement","className","onClick","dispatch","H1","posed","h1","enter","opacity","y","transition","duration","delay","exit","LetterReference","showingWord","oldWord","wasCorrect","this","setState","prevProps","_this2","setTimeout","react_pose_es","key","style","color","Component","WordInput","handleCodeSubmit","event","stopPropagation","preventDefault","onSubmit","e","placeholder","maxLength","value","onChange","target","Counter","span","isHovered","handleUserHover","_this","totalRight","ceil","onMouseEnter","onMouseLeave","counter_H1","App","backgroundImage","concat","tile","header","letterReference","wordInput","counter","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e102b219.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carbon.51bd2a3e.png\";","\r\nconst alphabet = [\r\n    {\r\n        \"letter\": \"a\",\r\n        \"code\": \"alpha\"\r\n    },\r\n    {\r\n        \"letter\": \"b\",\r\n        \"code\": \"bravo\"\r\n    },\r\n    {\r\n        \"letter\": \"c\",\r\n        \"code\": \"charlie\"\r\n    },\r\n    {\r\n        \"letter\": \"d\",\r\n        \"code\": \"delta\"\r\n    },\r\n    {\r\n        \"letter\": \"e\",\r\n        \"code\": \"echo\"\r\n    },\r\n    {\r\n        \"letter\": \"f\",\r\n        \"code\": \"foxtrot\"\r\n    },\r\n    {\r\n        \"letter\": \"g\",\r\n        \"code\": \"golf\"\r\n    },\r\n    {\r\n        \"letter\": \"h\",\r\n        \"code\": \"hotel\"\r\n    },\r\n    {\r\n        \"letter\": \"i\",\r\n        \"code\": \"india\"\r\n    },\r\n    {\r\n        \"letter\": \"j\",\r\n        \"code\": \"juliet\"\r\n    },\r\n    {\r\n        \"letter\": \"k\",\r\n        \"code\": \"kilo\"\r\n    },\r\n    {\r\n        \"letter\": \"l\",\r\n        \"code\": \"lima\"\r\n    },\r\n    {\r\n        \"letter\": \"m\",\r\n        \"code\": \"mike\"\r\n    },\r\n    {\r\n        \"letter\": \"n\",\r\n        \"code\": \"november\"\r\n    },\r\n    {\r\n        \"letter\": \"o\",\r\n        \"code\": \"oscar\"\r\n    },\r\n    {\r\n        \"letter\": \"p\",\r\n        \"code\": \"papa\"\r\n    },\r\n    {\r\n        \"letter\": \"q\",\r\n        \"code\": \"quebec\"\r\n    },\r\n    {\r\n        \"letter\": \"r\",\r\n        \"code\": \"romeo\"\r\n    },\r\n    {\r\n        \"letter\": \"s\",\r\n        \"code\": \"sierra\"\r\n    },\r\n    {\r\n        \"letter\": \"t\",\r\n        \"code\": \"tango\"\r\n    },\r\n    {\r\n        \"letter\": \"u\",\r\n        \"code\": \"uniform\"\r\n    },\r\n    {\r\n        \"letter\": \"v\",\r\n        \"code\": \"victor\"\r\n    },\r\n    {\r\n        \"letter\": \"w\",\r\n        \"code\": \"whiskey\"\r\n    },\r\n    {\r\n        \"letter\": \"x\",\r\n        \"code\": \"xray\"\r\n    },\r\n    {\r\n        \"letter\": \"y\",\r\n        \"code\": \"yankee\"\r\n    },\r\n    {\r\n        \"letter\": \"z\",\r\n        \"code\": \"zulu\"\r\n    },\r\n]\r\n\r\nexport default alphabet;","import {\r\n    RESET_COUNTER,\r\n    HANDLE_USER_CODE_INPUT,\r\n    SUBMIT_USER_CODE_INPUT,\r\n    CHANGE_LETTER_PROGRESSION_MODE\r\n} from '../constants';\r\n\r\nimport alphabet from '../../helpers/alphabet';\r\n\r\nlet initialState = {\r\n   trainerMode: 1, // Chooses linear progression (0) or random progression (1)\r\n   correct: 0,\r\n   total: 0,\r\n   showWord: false,\r\n   inputWasCorrect: false,\r\n   currentLetter: 0,\r\n   userCodeInput: ''\r\n}\r\n\r\nlet alphabetLoopHandler = s => {\r\n    if(s.trainerMode === 0){\r\n        if(s.currentLetter === 25){\r\n            return 0;\r\n        } else {\r\n            return s.currentLetter + 1;\r\n        }\r\n    } else if (s.trainerMode === 1){\r\n        return Math.floor(Math.random() * (26 - 0));\r\n    }\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case CHANGE_LETTER_PROGRESSION_MODE:\r\n            console.log(\"changing prog mode\");\r\n            return {...state, trainerMode: action.payload}\r\n        // Resets the counter that shows correct answers out of total.\r\n        case RESET_COUNTER:\r\n            console.log(\"Counters reset.\");\r\n            return {...state, correct: 0, total: 0};\r\n        // Handles the user's controlled input.\r\n        case HANDLE_USER_CODE_INPUT:\r\n            return {...state, userCodeInput: action.payload};\r\n        // Submits input and checks if user input matches the proper code.\r\n        case SUBMIT_USER_CODE_INPUT:\r\n            console.log(\"submitted\")\r\n            if(state.userCodeInput.toLowerCase() === alphabet[state.currentLetter].code){\r\n                console.log(\"matches, \" + state.userCodeInput.toLowerCase() + ' ' + alphabet[state.currentLetter].code);\r\n                return {\r\n                    ...state, \r\n                    correct: state.correct + 1, \r\n                    total: state.total + 1, \r\n                    currentLetter: alphabetLoopHandler(state), \r\n                    userCodeInput: '',\r\n                    inputWasCorrect: true\r\n                }\r\n            } else {\r\n                console.log(\"doesn't match\");\r\n                return {\r\n                    ...state, \r\n                    total: state.total + 1, \r\n                    currentLetter: alphabetLoopHandler(state), \r\n                    userCodeInput: '',\r\n                    inputWasCorrect: false\r\n                }\r\n            }\r\n        \r\n        // Returns the state as-is.\r\n        default:\r\n            return state;\r\n   }\r\n}\r\n\r\nexport default rootReducer;","export const RESET_COUNTER = \"RESET_COUNTER\";\r\nexport const HANDLE_USER_CODE_INPUT = \"HANDLE_USER_CODE_INPUT\";\r\nexport const SUBMIT_USER_CODE_INPUT = \"SUBMIT_USER_CODE_INPUT\";\r\nexport const CHANGE_LETTER_PROGRESSION_MODE = \"CHANGE_LETTER_PROGRESSION_MODE\";","import { createStore, applyMiddleware } from 'redux';\r\nimport rootReducer from './reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import { \r\n    RESET_COUNTER,\r\n    HANDLE_USER_CODE_INPUT,\r\n    SUBMIT_USER_CODE_INPUT,\r\n    CHANGE_LETTER_PROGRESSION_MODE\r\n} from './constants';\r\n\r\nexport const resetCounter = () => ({ type: RESET_COUNTER });\r\nexport const handleUserCodeInput = text => ({ type: HANDLE_USER_CODE_INPUT, payload: text });\r\nexport const submitUserCodeInput = () => ({ type: SUBMIT_USER_CODE_INPUT });\r\nexport const changeLetterProgressionMode = number => ({ type: CHANGE_LETTER_PROGRESSION_MODE, payload: number });","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeLetterProgressionMode } from '../redux/actions';\r\nimport store from '../redux/store';\r\n\r\n\r\nconst Header = props => (\r\n    <header className=\"header\">\r\n        <h1>NATO/IRSA<br/><small>alphabet trainer</small></h1>\r\n        <div className=\"header--navigation\">\r\n            <button onClick={()=>store.dispatch(changeLetterProgressionMode(0))} className={props.trainerMode === 0 ? \"active\" : \"\"}>Linear</button>\r\n            <button onClick={()=>store.dispatch(changeLetterProgressionMode(1))}className={props.trainerMode === 1 ? \"active\" : \"\"}>Random</button>\r\n        </div>\r\n    </header>\r\n)\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        trainerMode: state.trainerMode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Header);","import React, { Component } from 'react';\r\nimport alphabet from '../helpers/alphabet';\r\nimport { connect } from 'react-redux';\r\nimport posed, { PoseGroup } from 'react-pose';\r\n\r\nconst H1 = posed.h1({\r\n    enter: {\r\n        opacity: 1,\r\n        y: 0,\r\n        transition: { duration: 150, delay: 50 }\r\n    },\r\n    exit: {\r\n        opacity: 0,\r\n        y: 10,\r\n        transition: { duration: 150 }\r\n    }\r\n})\r\n\r\nclass LetterReference extends Component {\r\n    state = {\r\n        showingWord: false,\r\n        oldWord: '',\r\n        currentLetter: null,\r\n        wasCorrect: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(!this.state.currentLetter){\r\n            this.setState({currentLetter: alphabet[this.props.currentLetter].letter});\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if(prevProps !== this.props){\r\n            this.setState({showingWord: true, oldWord: alphabet[prevProps.currentLetter].code})\r\n            setTimeout(() => {\r\n                this.setState({showingWord: false, currentLetter: alphabet[this.props.currentLetter].letter})\r\n            }, 1000)\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <PoseGroup>\r\n                {\r\n                    this.state.showingWord\r\n                    ?<H1 className=\"wordReference\" key=\"word\" style={{color: (this.props.inputWasCorrect ? 'rgb(73, 250, 38)' : 'rgb(250, 38, 38)')}}>{this.state.oldWord}</H1>\r\n                    :<H1 className=\"letterReference\" key=\"letter\">{this.state.currentLetter}</H1>\r\n                }\r\n                \r\n            </PoseGroup>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentLetter: state.currentLetter,\r\n        inputWasCorrect: state.inputWasCorrect,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LetterReference);","import React, { Component } from 'react';\r\nimport alphabet from '../helpers/alphabet';\r\nimport { connect } from 'react-redux';\r\nimport { handleUserCodeInput, submitUserCodeInput } from '../redux/actions';\r\nimport store from '../redux/store';\r\n\r\nclass WordInput extends Component {\r\n    handleCodeSubmit = event => {\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n\r\n        store.dispatch(submitUserCodeInput());\r\n    }\r\n    render(){\r\n        return(\r\n        <form onSubmit={e=>this.handleCodeSubmit(e)}>\r\n            <input type=\"text\" placeholder=\"Type Code Word\" className=\"wordInput\" maxLength={10}\r\n            value={this.props.userCodeInput} onChange={e=>store.dispatch(handleUserCodeInput(e.target.value))}/>\r\n            <button className=\"hidden\" type=\"submit\"/>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userCodeInput: state.userCodeInput,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WordInput);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport store from '../redux/store';\r\nimport { resetCounter } from '../redux/actions';\r\nimport posed, { PoseGroup } from 'react-pose';\r\n\r\nconst H1 = posed.h1({\r\n    enter: {\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: {duration: 100, delay: 50}\r\n    },\r\n    exit: {\r\n        y: 10,\r\n        opacity: 0,\r\n        transition: {duration: 100}\r\n    }\r\n})\r\n\r\nconst Small = posed.span({\r\n    enter: {\r\n        y: 0,\r\n        opacity: 1,\r\n        transition: {duration: 100, delay: 50}\r\n    },\r\n    exit: {\r\n        y: 10,\r\n        opacity: 0,\r\n        transition: {duration: 100}\r\n    }\r\n})\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        isHovered: false\r\n    }\r\n\r\n    handleUserHover = value => {\r\n        this.setState({isHovered: value});\r\n    }\r\n    render(){\r\n        let totalRight = Math.ceil((this.props.correct / this.props.total) * 100);\r\n    return(\r\n        <div className=\"counter_wrapper\" onClick={()=>store.dispatch(resetCounter())} \r\n            onMouseEnter={()=>this.handleUserHover(true)} onMouseLeave={()=>this.handleUserHover(false)}>\r\n        <PoseGroup>\r\n            {this.state.isHovered\r\n            ? <H1 className=\"counter\" key=\"reset\">Reset Counter</H1>\r\n            : <H1 className=\"counter\" key=\"count\" >{this.props.correct} / {this.props.total}</H1>\r\n            }\r\n            {totalRight\r\n                ?<H1 className=\"percent\" key=\"percent\">{totalRight ? <p>({totalRight}%)</p> : null}</H1>\r\n                : null \r\n            }\r\n            \r\n            \r\n        </PoseGroup>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        correct: state.correct,\r\n        total: state.total\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Counter);","import React, { Component } from 'react';\n\n// background tile\nimport tile from './assets/carbon.png';\n\n// elems\nimport Header from './components/header';\nimport LetterReference from './components/letterReference';\nimport WordInput from './components/wordInput';\nimport Counter from './components/counter';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\" style={{backgroundImage: `linear-gradient(rgba(0,0,0,.5),rgba(0,0,0,.5)),url(${tile})`}}>\n        <Header/>\n        <LetterReference/>\n        <WordInput/>\n        <Counter/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Import Styles\nimport 'normalize.css';\nimport './styles/main.scss';\n\n// Import Redux\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\n// Gen Func\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}